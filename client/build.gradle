plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

ext.jaxwsSourceDir = "${buildDir}/generated/sources/jaxws"

repositories {
	mavenCentral()
}

configurations {
	jaxws
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	jaxws 'com.sun.xml.ws:jaxws-tools:3.0.0',
		'jakarta.xml.ws:jakarta.xml.ws-api:3.0.0',
		'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0',
		'jakarta.activation:jakarta.activation-api:2.0.0',
		'com.sun.xml.ws:jaxws-rt:3.0.0'

	implementation 'org.springframework.ws:spring-ws-security:latest.release'
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir jaxwsSourceDir
		}
	}
}

task wsimport {
	doLast {
		project.mkdir(jaxwsSourceDir)
		ant {
			taskdef(name: 'wsimport',
				classname: 'com.sun.tools.ws.ant.WsImport',
				classpath: configurations.jaxws.asPath
			)
			wsimport(
				keep: true,
				destdir: jaxwsSourceDir,
				extension: "true",
				verbose: true,
				wsdl: "http://host.docker.internal:8080/ws/okomes.wsdl",
				xnocompile: true,
				package: "com.example.wsdl"
			) {
				xjcarg(value: "-XautoNameResolution")
			}
		}
	}
}

compileJava.dependsOn wsimport
